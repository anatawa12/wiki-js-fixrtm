name: Release
on:
  workflow_dispatch: {}
  push:
    branches:
      - latest-dev-fixrtm

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone
        run: |
          # credentials configuration
          CREDENTIAL="$(printf "x-access-token:%s" "${GITHUB_TOKEN}" | base64)"
          printf "::add-mask::%s" "$CREDENTIAL"
          git config --global "http.${GITHUB_SERVER_URL}/.extraheader" "AUTHORIZATION: basic $CREDENTIAL"

          # clone repository
          git clone \
            --depth=1 \
            --branch="$(echo "${GITHUB_REF}" | sed 's#^refs/heads/##')" \
            "${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}.git" \
            .
          git config remote.origin.partialclonefilter tree:0
          git fetch --unshallow
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: detect version name
        run: |
          RELEASE="$(git tag --list --sort=-committerdate --merged HEAD | grep -v '-' | head -1)"
          FIX_COUNT="$(git tag --list --merged HEAD --no-merged "$RELEASE" | grep "^$RELEASE-fixrtm-" | wc -l)"
          NEW_RELEASE="$RELEASE-fixrtm-$(( $FIX_COUNT + 1 ))"
          echo "NEW_RELEASE=$NEW_RELEASE" >> $GITHUB_ENV

      - name: Update version
        run: |
          sed -i \
            -e "s#\"dev\": true#\"dev\": false#" \
            -e "s#\(\"version\": \"\)\(.*\)\(\"\)#\1$NEW_RELEASE\3#" \
            package.json

      - name: Push (git tag)
        run: |
          git tag "$NEW_RELEASE"
          git push origin "$NEW_RELEASE"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          file:     dev/build/Dockerfile
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (docker)
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ env.NEW_RELEASE }}
